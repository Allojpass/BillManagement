<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.billmanage.dao.mapper.RroleMapper">
  <resultMap id="BaseResultMap" type="com.project.billmanage.entities.pojo.Rrole">
    <id column="rroleId" jdbcType="INTEGER" property="rroleid" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rroleId, roleName, memo
  </sql>
  <select id="selectByExample" parameterType="com.project.billmanage.entities.pojo.RroleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rrole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rrole
    where rroleId = #{rroleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rrole
    where rroleId = #{rroleid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.project.billmanage.entities.pojo.RroleExample">
    delete from rrole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.project.billmanage.entities.pojo.Rrole">
    insert into rrole (rroleId, roleName, memo
      )
    values (#{rroleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.project.billmanage.entities.pojo.Rrole">
    insert into rrole
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rroleid != null">
        rroleId,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rroleid != null">
        #{rroleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.billmanage.entities.pojo.RroleExample" resultType="java.lang.Integer">
    select count(*) from rrole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rrole
    <set>
      <if test="record.rroleid != null">
        rroleId = #{record.rroleid,jdbcType=INTEGER},
      </if>
      <if test="record.rolename != null">
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rrole
    set rroleId = #{record.rroleid,jdbcType=INTEGER},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.billmanage.entities.pojo.Rrole">
    update rrole
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where rroleId = #{rroleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.billmanage.entities.pojo.Rrole">
    update rrole
    set roleName = #{rolename,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where rroleId = #{rroleid,jdbcType=INTEGER}
  </update>
  <select id="selectByClientId" resultType="com.project.billmanage.entities.pojo.Rrole">
    select rrole.rroleId,rrole.roleName,rrole.memo from rrole,clientRole
    where clientRole.clientId = ${clientId} and clientRole.rroleId = Rrole.rroleId
  </select>
</mapper>